{% extends "layouts/base.twig" %}
{% block title %}home{% endblock %}
{% block head %}

{% endblock head %}

{% block content %}
    <div>
        {% for key,product in products %}
            <li class="has-border-1 border-color-lightgrey padding-4 border-radius-4 margin-2">
                <p>
                    <b>{{ product['title'] }} - {{ product['eshop_product_id'] }}</b>
                </p>
                <button class="crawl-page-btn" data-eshop-product-id="{{ product['eshop_product_id'] }}">Crawl</button>
            </li>
        {% endfor %}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        $(document).ready(function() {
            $(".crawl-page-btn").on("click", function () {
                let productId = $(this).data("eshop-product-id");

                fetch(`/products/crawl/skroutz/fetch`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': '{{ csrf }}'
                    },
                    body: JSON.stringify({
                        eshop_product_id: productId,
                    })
                })
                    .then(res=>res.clone().json())
                    .then(data => {
                        if (data.success) {
                            console.log(data.my_price);
                            $(this).parent().append('<p>My price:<span class="green"><b>' + data.my_price + '&#8364;</b></span></p>')
                            $(this).parent().append('<p>Lowest price:<span class="red"><b>' + data.lowest_price + '&#8364;</b></span></p>')
                        } else {
                            alert(data.message);
                        }
                    })
                    .catch(error => console.error("Error:", JSON.stringify(error)));
            });
        });

        (async () => {
            // Get the parameter from the command-line arguments
            const url = 'https://shybonsai.gr'//process.argv[2];
// console.log(url);
            const browser = await puppeteer.launch({
                executablePath: '/usr/bin/chromium-browser',
                headless: true, // or false if you want to see the browser
                args: ['--no-sandbox', '--disable-setuid-sandbox'] // Important!
            });
            const page = await browser.newPage();

            await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3');
            await page.goto(url, { waitUntil: 'networkidle2' });
            // await page.waitForTimeout(5000);
            const content = await page.content();
            console.log(content);
            await browser.close();
        })();
    </script>
{% endblock %}
